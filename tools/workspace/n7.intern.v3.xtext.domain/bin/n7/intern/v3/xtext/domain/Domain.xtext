// automatically generated by Xtext
grammar n7.intern.v3.xtext.domain.Domain with org.eclipse.xtext.common.Terminals

hidden(WS, ML_COMMENT, SL_COMMENT)
import "http://www.example.org/Domain" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

DomainFramework returns DomainFramework hidden(WS, ML_COMMENT, SL_COMMENT):
	('@description''('description=STRING')')?
	'domain' name=ID '{'
	 	setups+=Setup
	 	(function_definitions += FunctionDefinition)*
	 	(parameters += TypedParameter| parameters += FunctionParameter)*
	 '}'
;

TypedParameter returns Parameter:
	('@description''('description=STRING')')?
	(type=Type) name=ID ('=' (default_value=STRING|default_value= INT |default_value= NINT | default_value = BOOLEAN | default_value = FLOAT | default_value = CHAR | default_value = LONG | default_value = BYTE | default_value = DOUBLE) )?'{' (markers += AssignationMarker)* '}'
;

FunctionParameter returns Parameter:
	('@description''('description=STRING')')?
	(function_type=[FunctionDefinition]) name=ID ('=' default_function_value=QUALIFIED_NAME )? '{' (markers += FunctionMarker)* '}'
;

AssignationMarker returns AssignationMarker:
	'@assign''('name=MarkerID')'
;

FunctionMarker returns FunctionMarker:
	'@do' '('name=MarkerID')' '{' 
		block=FunctionBlock
	 '}'
;

FunctionBlock returns FunctionBlock:
	{FunctionBlock} 'this' '('(((parameters+=ID|parameters+=DEFAULT_PARAMETER) ',')*((parameters+=ID|parameters+=DEFAULT_PARAMETER)))?')'
;


terminal DEFAULT_PARAMETER returns ecore::EString:
	'$'INT
;

FunctionDefinition returns FunctionDefinition:
	('@description''('description=STRING')')?
	'def' name = ID '(' ((inputs+= Type',')*(inputs+= Type))? ')' (':' (outputs+= Type',')*(outputs+= Type))? '{' (values+=FunctionValue)+ '}'
;

FunctionValue returns FunctionValue:
	name=ID '{'(instructions+=SetupBlock)+ '}'
;

SetupBlock returns SetupBlock:
	'@' language=Language '{' instructions += StringInstruction'}'
;

Setup returns Setup:
	'setup' '{'(instructions+=SetupBlock)+'}' 
;

StringInstruction returns StringInstruction:
	content = UNQUOTEDSTRING	
;

terminal UNQUOTEDSTRING:
	'>' ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'>'|'<'|'\\') | !('\\'|'<') )* '<'
;

terminal QUALIFIED_NAME:
	ID'.'ID
;

enum Language:
	python='python' | java = 'java' | c='c'	
;

enum MarkerID:
	INTERPOLATION='Interpolation'
;


enum Type :
	string='string'| byte = 'byte'| short = 'short'| int = 'int'| long = 'long'| float = 'float' | double = 'double' | char = 'char' | boolean = 'boolean'
;

terminal BOOLEAN returns ecore::EBoolean :
	'true' | 'false'	
;

terminal NINT returns ecore::EInt :
	'-' INT
;
terminal LONG returns ecore::EInt :
	(NINT|INT) ('l'|'L')
;
terminal FLOAT returns ecore::EFloat :
	(NINT|INT)('.'INT)?('f'|'F')
;
terminal DOUBLE returns ecore::EDouble :
	(NINT|INT)('.'INT)?('d'|'D')
;
terminal CHAR returns ecore::EChar:
	 "'" ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") ) "'"
;
terminal BYTE returns ecore::EByte:
	'0x'((('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))
		|(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))
		|(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))
		|(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))
	)
;
