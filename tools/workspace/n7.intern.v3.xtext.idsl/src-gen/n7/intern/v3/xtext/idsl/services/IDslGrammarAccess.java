/*
 * generated by Xtext 2.29.0
 */
package n7.intern.v3.xtext.idsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class IDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class IotFrameworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.IotFramework");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cDataflowdescriptorsAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cDataflowdescriptorsThingBlockParserRuleCall_0_0_0 = (RuleCall)cDataflowdescriptorsAssignment_0_0.eContents().get(0);
		private final Assignment cDataflowdescriptorsAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cDataflowdescriptorsOutputBlockParserRuleCall_0_1_0 = (RuleCall)cDataflowdescriptorsAssignment_0_1.eContents().get(0);
		private final Assignment cDataflowdescriptorsAssignment_0_2 = (Assignment)cAlternatives_0.eContents().get(2);
		private final RuleCall cDataflowdescriptorsHolderBlockParserRuleCall_0_2_0 = (RuleCall)cDataflowdescriptorsAssignment_0_2.eContents().get(0);
		private final Assignment cInterfacerdescriptorsAssignment_0_3 = (Assignment)cAlternatives_0.eContents().get(3);
		private final RuleCall cInterfacerdescriptorsSynchronizerBlockParserRuleCall_0_3_0 = (RuleCall)cInterfacerdescriptorsAssignment_0_3.eContents().get(0);
		private final Assignment cInterfacerdescriptorsAssignment_0_4 = (Assignment)cAlternatives_0.eContents().get(4);
		private final RuleCall cInterfacerdescriptorsPreProcessorBlockParserRuleCall_0_4_0 = (RuleCall)cInterfacerdescriptorsAssignment_0_4.eContents().get(0);
		private final Assignment cInterfacerdescriptorsAssignment_0_5 = (Assignment)cAlternatives_0.eContents().get(5);
		private final RuleCall cInterfacerdescriptorsDataProcessorBlockParserRuleCall_0_5_0 = (RuleCall)cInterfacerdescriptorsAssignment_0_5.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cDescriptionKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cDescriptionAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_2_0 = (RuleCall)cDescriptionAssignment_1_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cConfigurationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cDataflowsAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cDataflowsDefinitionInstructionParserRuleCall_5_0_0 = (RuleCall)cDataflowsAssignment_5_0.eContents().get(0);
		private final Assignment cInterfacersAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cInterfacersSynchronizerAssignationParserRuleCall_5_1_0 = (RuleCall)cInterfacersAssignment_5_1.eContents().get(0);
		private final Assignment cInterfacersAssignment_5_2 = (Assignment)cAlternatives_5.eContents().get(2);
		private final RuleCall cInterfacersPreProcessorAssignationParserRuleCall_5_2_0 = (RuleCall)cInterfacersAssignment_5_2.eContents().get(0);
		private final Assignment cInterfacersAssignment_5_3 = (Assignment)cAlternatives_5.eContents().get(3);
		private final RuleCall cInterfacersProcessorAssignationParserRuleCall_5_3_0 = (RuleCall)cInterfacersAssignment_5_3.eContents().get(0);
		private final Assignment cInterfacersAssignment_5_4 = (Assignment)cAlternatives_5.eContents().get(4);
		private final RuleCall cInterfacersOutputAssignationParserRuleCall_5_4_0 = (RuleCall)cInterfacersAssignment_5_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//IotFramework:
		//    (      dataflowdescriptors   += ThingBlock
		//        | dataflowdescriptors   += OutputBlock
		//        | dataflowdescriptors   += HolderBlock
		//        | interfacerdescriptors += SynchronizerBlock
		//        | interfacerdescriptors += PreProcessorBlock
		//        | interfacerdescriptors += DataProcessorBlock
		//    )*
		//    ('@description''('description=STRING')')?
		//     'configuration' name=ID '{'
		//    (dataflows+=DefinitionInstruction
		//        | interfacers += SynchronizerAssignation
		//        | interfacers += PreProcessorAssignation
		//        | interfacers += ProcessorAssignation
		//        | interfacers += OutputAssignation
		//    )+ '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(      dataflowdescriptors   += ThingBlock
		//    | dataflowdescriptors   += OutputBlock
		//    | dataflowdescriptors   += HolderBlock
		//    | interfacerdescriptors += SynchronizerBlock
		//    | interfacerdescriptors += PreProcessorBlock
		//    | interfacerdescriptors += DataProcessorBlock
		//)*
		//('@description''('description=STRING')')?
		// 'configuration' name=ID '{'
		//(dataflows+=DefinitionInstruction
		//    | interfacers += SynchronizerAssignation
		//    | interfacers += PreProcessorAssignation
		//    | interfacers += ProcessorAssignation
		//    | interfacers += OutputAssignation
		//)+ '}'
		public Group getGroup() { return cGroup; }
		
		//(      dataflowdescriptors   += ThingBlock
		//    | dataflowdescriptors   += OutputBlock
		//    | dataflowdescriptors   += HolderBlock
		//    | interfacerdescriptors += SynchronizerBlock
		//    | interfacerdescriptors += PreProcessorBlock
		//    | interfacerdescriptors += DataProcessorBlock
		//)*
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//dataflowdescriptors   += ThingBlock
		public Assignment getDataflowdescriptorsAssignment_0_0() { return cDataflowdescriptorsAssignment_0_0; }
		
		//ThingBlock
		public RuleCall getDataflowdescriptorsThingBlockParserRuleCall_0_0_0() { return cDataflowdescriptorsThingBlockParserRuleCall_0_0_0; }
		
		//dataflowdescriptors   += OutputBlock
		public Assignment getDataflowdescriptorsAssignment_0_1() { return cDataflowdescriptorsAssignment_0_1; }
		
		//OutputBlock
		public RuleCall getDataflowdescriptorsOutputBlockParserRuleCall_0_1_0() { return cDataflowdescriptorsOutputBlockParserRuleCall_0_1_0; }
		
		//dataflowdescriptors   += HolderBlock
		public Assignment getDataflowdescriptorsAssignment_0_2() { return cDataflowdescriptorsAssignment_0_2; }
		
		//HolderBlock
		public RuleCall getDataflowdescriptorsHolderBlockParserRuleCall_0_2_0() { return cDataflowdescriptorsHolderBlockParserRuleCall_0_2_0; }
		
		//interfacerdescriptors += SynchronizerBlock
		public Assignment getInterfacerdescriptorsAssignment_0_3() { return cInterfacerdescriptorsAssignment_0_3; }
		
		//SynchronizerBlock
		public RuleCall getInterfacerdescriptorsSynchronizerBlockParserRuleCall_0_3_0() { return cInterfacerdescriptorsSynchronizerBlockParserRuleCall_0_3_0; }
		
		//interfacerdescriptors += PreProcessorBlock
		public Assignment getInterfacerdescriptorsAssignment_0_4() { return cInterfacerdescriptorsAssignment_0_4; }
		
		//PreProcessorBlock
		public RuleCall getInterfacerdescriptorsPreProcessorBlockParserRuleCall_0_4_0() { return cInterfacerdescriptorsPreProcessorBlockParserRuleCall_0_4_0; }
		
		//interfacerdescriptors += DataProcessorBlock
		public Assignment getInterfacerdescriptorsAssignment_0_5() { return cInterfacerdescriptorsAssignment_0_5; }
		
		//DataProcessorBlock
		public RuleCall getInterfacerdescriptorsDataProcessorBlockParserRuleCall_0_5_0() { return cInterfacerdescriptorsDataProcessorBlockParserRuleCall_0_5_0; }
		
		//('@description''('description=STRING')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'@description'
		public Keyword getDescriptionKeyword_1_0() { return cDescriptionKeyword_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_1_2() { return cDescriptionAssignment_1_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_2_0() { return cDescriptionSTRINGTerminalRuleCall_1_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }
		
		//'configuration'
		public Keyword getConfigurationKeyword_2() { return cConfigurationKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//(dataflows+=DefinitionInstruction
		//    | interfacers += SynchronizerAssignation
		//    | interfacers += PreProcessorAssignation
		//    | interfacers += ProcessorAssignation
		//    | interfacers += OutputAssignation
		//)+
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//dataflows+=DefinitionInstruction
		public Assignment getDataflowsAssignment_5_0() { return cDataflowsAssignment_5_0; }
		
		//DefinitionInstruction
		public RuleCall getDataflowsDefinitionInstructionParserRuleCall_5_0_0() { return cDataflowsDefinitionInstructionParserRuleCall_5_0_0; }
		
		//interfacers += SynchronizerAssignation
		public Assignment getInterfacersAssignment_5_1() { return cInterfacersAssignment_5_1; }
		
		//SynchronizerAssignation
		public RuleCall getInterfacersSynchronizerAssignationParserRuleCall_5_1_0() { return cInterfacersSynchronizerAssignationParserRuleCall_5_1_0; }
		
		//interfacers += PreProcessorAssignation
		public Assignment getInterfacersAssignment_5_2() { return cInterfacersAssignment_5_2; }
		
		//PreProcessorAssignation
		public RuleCall getInterfacersPreProcessorAssignationParserRuleCall_5_2_0() { return cInterfacersPreProcessorAssignationParserRuleCall_5_2_0; }
		
		//interfacers += ProcessorAssignation
		public Assignment getInterfacersAssignment_5_3() { return cInterfacersAssignment_5_3; }
		
		//ProcessorAssignation
		public RuleCall getInterfacersProcessorAssignationParserRuleCall_5_3_0() { return cInterfacersProcessorAssignationParserRuleCall_5_3_0; }
		
		//interfacers += OutputAssignation
		public Assignment getInterfacersAssignment_5_4() { return cInterfacersAssignment_5_4; }
		
		//OutputAssignation
		public RuleCall getInterfacersOutputAssignationParserRuleCall_5_4_0() { return cInterfacersOutputAssignationParserRuleCall_5_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ThingBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.ThingBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cDescriptionAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cThingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cConnexionsAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cConnexionsConnexionBlockParserRuleCall_4_0_0 = (RuleCall)cConnexionsAssignment_4_0.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cParametersDomainParameterBlockParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Assignment cStreamdescriptorsAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cStreamdescriptorsStreamDefinitionParserRuleCall_4_2_0 = (RuleCall)cStreamdescriptorsAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ThingBlock returns Thing:
		//        ('@description''('description=STRING')')?
		//        'thing' name=ID '{' (connexions += ConnexionBlock | parameters += DomainParameterBlock | streamdescriptors += StreamDefinition )+ '}';
		@Override public ParserRule getRule() { return rule; }
		
		//('@description''('description=STRING')')?
		//'thing' name=ID '{' (connexions += ConnexionBlock | parameters += DomainParameterBlock | streamdescriptors += StreamDefinition )+ '}'
		public Group getGroup() { return cGroup; }
		
		//('@description''('description=STRING')')?
		public Group getGroup_0() { return cGroup_0; }
		
		//'@description'
		public Keyword getDescriptionKeyword_0_0() { return cDescriptionKeyword_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_2() { return cDescriptionAssignment_0_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_2_0() { return cDescriptionSTRINGTerminalRuleCall_0_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//'thing'
		public Keyword getThingKeyword_1() { return cThingKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(connexions += ConnexionBlock | parameters += DomainParameterBlock | streamdescriptors += StreamDefinition )+
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//connexions += ConnexionBlock
		public Assignment getConnexionsAssignment_4_0() { return cConnexionsAssignment_4_0; }
		
		//ConnexionBlock
		public RuleCall getConnexionsConnexionBlockParserRuleCall_4_0_0() { return cConnexionsConnexionBlockParserRuleCall_4_0_0; }
		
		//parameters += DomainParameterBlock
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }
		
		//DomainParameterBlock
		public RuleCall getParametersDomainParameterBlockParserRuleCall_4_1_0() { return cParametersDomainParameterBlockParserRuleCall_4_1_0; }
		
		//streamdescriptors += StreamDefinition
		public Assignment getStreamdescriptorsAssignment_4_2() { return cStreamdescriptorsAssignment_4_2; }
		
		//StreamDefinition
		public RuleCall getStreamdescriptorsStreamDefinitionParserRuleCall_4_2_0() { return cStreamdescriptorsStreamDefinitionParserRuleCall_4_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ConnexionBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.ConnexionBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cDescriptionAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cConnexionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParametersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cParametersDomainParameterBlockParserRuleCall_4_0 = (RuleCall)cParametersAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ConnexionBlock returns Connexion :
		//    ('@description''('description=STRING')')?
		//    'connexion' name=ID '{' ( parameters += DomainParameterBlock )+ '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('@description''('description=STRING')')?
		//'connexion' name=ID '{' ( parameters += DomainParameterBlock )+ '}'
		public Group getGroup() { return cGroup; }
		
		//('@description''('description=STRING')')?
		public Group getGroup_0() { return cGroup_0; }
		
		//'@description'
		public Keyword getDescriptionKeyword_0_0() { return cDescriptionKeyword_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_2() { return cDescriptionAssignment_0_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_2_0() { return cDescriptionSTRINGTerminalRuleCall_0_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//'connexion'
		public Keyword getConnexionKeyword_1() { return cConnexionKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//( parameters += DomainParameterBlock )+
		public Assignment getParametersAssignment_4() { return cParametersAssignment_4; }
		
		//DomainParameterBlock
		public RuleCall getParametersDomainParameterBlockParserRuleCall_4_0() { return cParametersDomainParameterBlockParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ParameterExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.ParameterExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cContentAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cContentSTRINGTerminalRuleCall_2_0_0 = (RuleCall)cContentAssignment_2_0.eContents().get(0);
		private final Assignment cContentAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cContentINTTerminalRuleCall_2_1_0 = (RuleCall)cContentAssignment_2_1.eContents().get(0);
		private final Assignment cContentAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cContentNINTTerminalRuleCall_2_2_0 = (RuleCall)cContentAssignment_2_2.eContents().get(0);
		private final Assignment cContentAssignment_2_3 = (Assignment)cAlternatives_2.eContents().get(3);
		private final RuleCall cContentBOOLEANTerminalRuleCall_2_3_0 = (RuleCall)cContentAssignment_2_3.eContents().get(0);
		private final Assignment cContentAssignment_2_4 = (Assignment)cAlternatives_2.eContents().get(4);
		private final RuleCall cContentFLOATTerminalRuleCall_2_4_0 = (RuleCall)cContentAssignment_2_4.eContents().get(0);
		private final Assignment cContentAssignment_2_5 = (Assignment)cAlternatives_2.eContents().get(5);
		private final RuleCall cContentCHARTerminalRuleCall_2_5_0 = (RuleCall)cContentAssignment_2_5.eContents().get(0);
		private final Assignment cContentAssignment_2_6 = (Assignment)cAlternatives_2.eContents().get(6);
		private final RuleCall cContentLONGTerminalRuleCall_2_6_0 = (RuleCall)cContentAssignment_2_6.eContents().get(0);
		private final Assignment cContentAssignment_2_7 = (Assignment)cAlternatives_2.eContents().get(7);
		private final RuleCall cContentBYTETerminalRuleCall_2_7_0 = (RuleCall)cContentAssignment_2_7.eContents().get(0);
		private final Assignment cContentAssignment_2_8 = (Assignment)cAlternatives_2.eContents().get(8);
		private final RuleCall cContentDOUBLETerminalRuleCall_2_8_0 = (RuleCall)cContentAssignment_2_8.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ParameterExpression returns Parameter:
		//    name=ID '=' (content=STRING|content= INT |content= NINT | content = BOOLEAN | content = FLOAT | content = CHAR | content = LONG | content = BYTE | content = DOUBLE) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '=' (content=STRING|content= INT |content= NINT | content = BOOLEAN | content = FLOAT | content = CHAR | content = LONG | content = BYTE | content = DOUBLE) ';'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(content=STRING|content= INT |content= NINT | content = BOOLEAN | content = FLOAT | content = CHAR | content = LONG | content = BYTE | content = DOUBLE)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//content=STRING
		public Assignment getContentAssignment_2_0() { return cContentAssignment_2_0; }
		
		//STRING
		public RuleCall getContentSTRINGTerminalRuleCall_2_0_0() { return cContentSTRINGTerminalRuleCall_2_0_0; }
		
		//content= INT
		public Assignment getContentAssignment_2_1() { return cContentAssignment_2_1; }
		
		//INT
		public RuleCall getContentINTTerminalRuleCall_2_1_0() { return cContentINTTerminalRuleCall_2_1_0; }
		
		//content= NINT
		public Assignment getContentAssignment_2_2() { return cContentAssignment_2_2; }
		
		//NINT
		public RuleCall getContentNINTTerminalRuleCall_2_2_0() { return cContentNINTTerminalRuleCall_2_2_0; }
		
		//content = BOOLEAN
		public Assignment getContentAssignment_2_3() { return cContentAssignment_2_3; }
		
		//BOOLEAN
		public RuleCall getContentBOOLEANTerminalRuleCall_2_3_0() { return cContentBOOLEANTerminalRuleCall_2_3_0; }
		
		//content = FLOAT
		public Assignment getContentAssignment_2_4() { return cContentAssignment_2_4; }
		
		//FLOAT
		public RuleCall getContentFLOATTerminalRuleCall_2_4_0() { return cContentFLOATTerminalRuleCall_2_4_0; }
		
		//content = CHAR
		public Assignment getContentAssignment_2_5() { return cContentAssignment_2_5; }
		
		//CHAR
		public RuleCall getContentCHARTerminalRuleCall_2_5_0() { return cContentCHARTerminalRuleCall_2_5_0; }
		
		//content = LONG
		public Assignment getContentAssignment_2_6() { return cContentAssignment_2_6; }
		
		//LONG
		public RuleCall getContentLONGTerminalRuleCall_2_6_0() { return cContentLONGTerminalRuleCall_2_6_0; }
		
		//content = BYTE
		public Assignment getContentAssignment_2_7() { return cContentAssignment_2_7; }
		
		//BYTE
		public RuleCall getContentBYTETerminalRuleCall_2_7_0() { return cContentBYTETerminalRuleCall_2_7_0; }
		
		//content = DOUBLE
		public Assignment getContentAssignment_2_8() { return cContentAssignment_2_8; }
		
		//DOUBLE
		public RuleCall getContentDOUBLETerminalRuleCall_2_8_0() { return cContentDOUBLETerminalRuleCall_2_8_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class StreamDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.StreamDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cDescriptionAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cStreamKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOfKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeTypeEnumRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cLessThanSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSamplingRateAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSamplingRateINTTerminalRuleCall_6_0 = (RuleCall)cSamplingRateAssignment_6.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//StreamDefinition returns StreamDescriptor:
		//    ('@description''('description=STRING')')?
		//    'stream' name=ID 'of' type=Type '<' samplingRate=INT '>'';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('@description''('description=STRING')')?
		//'stream' name=ID 'of' type=Type '<' samplingRate=INT '>'';'
		public Group getGroup() { return cGroup; }
		
		//('@description''('description=STRING')')?
		public Group getGroup_0() { return cGroup_0; }
		
		//'@description'
		public Keyword getDescriptionKeyword_0_0() { return cDescriptionKeyword_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_2() { return cDescriptionAssignment_0_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_2_0() { return cDescriptionSTRINGTerminalRuleCall_0_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//'stream'
		public Keyword getStreamKeyword_1() { return cStreamKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'of'
		public Keyword getOfKeyword_3() { return cOfKeyword_3; }
		
		//type=Type
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//Type
		public RuleCall getTypeTypeEnumRuleCall_4_0() { return cTypeTypeEnumRuleCall_4_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_5() { return cLessThanSignKeyword_5; }
		
		//samplingRate=INT
		public Assignment getSamplingRateAssignment_6() { return cSamplingRateAssignment_6; }
		
		//INT
		public RuleCall getSamplingRateINTTerminalRuleCall_6_0() { return cSamplingRateINTTerminalRuleCall_6_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_7() { return cGreaterThanSignKeyword_7; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class OutputBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.OutputBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cDescriptionAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cOutputKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParametersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cParametersDomainParameterBlockParserRuleCall_4_0 = (RuleCall)cParametersAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OutputBlock returns Output:
		//    ('@description''('description=STRING')')?
		//    'output' name=ID '{'( parameters += DomainParameterBlock )+'}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('@description''('description=STRING')')?
		//'output' name=ID '{'( parameters += DomainParameterBlock )+'}'
		public Group getGroup() { return cGroup; }
		
		//('@description''('description=STRING')')?
		public Group getGroup_0() { return cGroup_0; }
		
		//'@description'
		public Keyword getDescriptionKeyword_0_0() { return cDescriptionKeyword_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_2() { return cDescriptionAssignment_0_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_2_0() { return cDescriptionSTRINGTerminalRuleCall_0_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//'output'
		public Keyword getOutputKeyword_1() { return cOutputKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//( parameters += DomainParameterBlock )+
		public Assignment getParametersAssignment_4() { return cParametersAssignment_4; }
		
		//DomainParameterBlock
		public RuleCall getParametersDomainParameterBlockParserRuleCall_4_0() { return cParametersDomainParameterBlockParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class HolderBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.HolderBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cDescriptionAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cHolderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cParametersAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cParametersDomainParameterBlockParserRuleCall_4_0_0 = (RuleCall)cParametersAssignment_4_0.eContents().get(0);
		private final Assignment cStreamdescriptorsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cStreamdescriptorsStreamDefinitionParserRuleCall_4_1_0 = (RuleCall)cStreamdescriptorsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//HolderBlock returns DataHolder:
		//    ('@description''('description=STRING')')?
		//    'holder' name=ID '{'( parameters += DomainParameterBlock | streamdescriptors += StreamDefinition)+'}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('@description''('description=STRING')')?
		//'holder' name=ID '{'( parameters += DomainParameterBlock | streamdescriptors += StreamDefinition)+'}'
		public Group getGroup() { return cGroup; }
		
		//('@description''('description=STRING')')?
		public Group getGroup_0() { return cGroup_0; }
		
		//'@description'
		public Keyword getDescriptionKeyword_0_0() { return cDescriptionKeyword_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_2() { return cDescriptionAssignment_0_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_2_0() { return cDescriptionSTRINGTerminalRuleCall_0_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//'holder'
		public Keyword getHolderKeyword_1() { return cHolderKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//( parameters += DomainParameterBlock | streamdescriptors += StreamDefinition)+
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//parameters += DomainParameterBlock
		public Assignment getParametersAssignment_4_0() { return cParametersAssignment_4_0; }
		
		//DomainParameterBlock
		public RuleCall getParametersDomainParameterBlockParserRuleCall_4_0_0() { return cParametersDomainParameterBlockParserRuleCall_4_0_0; }
		
		//streamdescriptors += StreamDefinition
		public Assignment getStreamdescriptorsAssignment_4_1() { return cStreamdescriptorsAssignment_4_1; }
		
		//StreamDefinition
		public RuleCall getStreamdescriptorsStreamDefinitionParserRuleCall_4_1_0() { return cStreamdescriptorsStreamDefinitionParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AnonymousStreamDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.AnonymousStreamDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStreamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cOfKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeTypeEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//AnonymousStreamDefinition returns StreamDescriptor:
		//    'stream' name=ID 'of' type=Type
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'stream' name=ID 'of' type=Type
		public Group getGroup() { return cGroup; }
		
		//'stream'
		public Keyword getStreamKeyword_0() { return cStreamKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'of'
		public Keyword getOfKeyword_2() { return cOfKeyword_2; }
		
		//type=Type
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//Type
		public RuleCall getTypeTypeEnumRuleCall_3_0() { return cTypeTypeEnumRuleCall_3_0; }
	}
	public class AnomynousHolderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.AnomynousHolder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cStreamdescriptorsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cStreamdescriptorsAnonymousStreamDefinitionParserRuleCall_1_0_0 = (RuleCall)cStreamdescriptorsAssignment_1_0.eContents().get(0);
		private final Keyword cCommaKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cStreamdescriptorsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStreamdescriptorsAnonymousStreamDefinitionParserRuleCall_2_0 = (RuleCall)cStreamdescriptorsAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AnomynousHolder returns DataHolder:
		//    '['  (streamdescriptors += AnonymousStreamDefinition ',')* (streamdescriptors += AnonymousStreamDefinition) ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'['  (streamdescriptors += AnonymousStreamDefinition ',')* (streamdescriptors += AnonymousStreamDefinition) ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//(streamdescriptors += AnonymousStreamDefinition ',')*
		public Group getGroup_1() { return cGroup_1; }
		
		//streamdescriptors += AnonymousStreamDefinition
		public Assignment getStreamdescriptorsAssignment_1_0() { return cStreamdescriptorsAssignment_1_0; }
		
		//AnonymousStreamDefinition
		public RuleCall getStreamdescriptorsAnonymousStreamDefinitionParserRuleCall_1_0_0() { return cStreamdescriptorsAnonymousStreamDefinitionParserRuleCall_1_0_0; }
		
		//','
		public Keyword getCommaKeyword_1_1() { return cCommaKeyword_1_1; }
		
		//(streamdescriptors += AnonymousStreamDefinition)
		public Assignment getStreamdescriptorsAssignment_2() { return cStreamdescriptorsAssignment_2; }
		
		//AnonymousStreamDefinition
		public RuleCall getStreamdescriptorsAnonymousStreamDefinitionParserRuleCall_2_0() { return cStreamdescriptorsAnonymousStreamDefinitionParserRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class ReferenceNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.ReferenceName");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//ReferenceName returns Reference :
		//    name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class PreProcessorBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.PreProcessorBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cDescriptionAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cPreprocessorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_0_0 = (Group)cGroup_4_0.eContents().get(0);
		private final Assignment cInputdataflowdescriptorsAssignment_4_0_0_0 = (Assignment)cGroup_4_0_0.eContents().get(0);
		private final CrossReference cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0 = (CrossReference)cInputdataflowdescriptorsAssignment_4_0_0_0.eContents().get(0);
		private final RuleCall cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_0_0_0_1 = (RuleCall)cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_4_0_0_1 = (Keyword)cGroup_4_0_0.eContents().get(1);
		private final Assignment cInputdataflowdescriptorsAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final CrossReference cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0 = (CrossReference)cInputdataflowdescriptorsAssignment_4_0_1.eContents().get(0);
		private final RuleCall cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_1_0_1 = (RuleCall)cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0.eContents().get(1);
		private final Assignment cInputdataflowdescriptorsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final CrossReference cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0 = (CrossReference)cInputdataflowdescriptorsAssignment_4_1.eContents().get(0);
		private final RuleCall cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_1_0_1 = (RuleCall)cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0.eContents().get(1);
		private final Assignment cAnomynousinputdataflowdescriptorsAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_4_2_0 = (RuleCall)cAnomynousinputdataflowdescriptorsAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAnomynousinputdataflowdescriptorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_5_1_0 = (RuleCall)cAnomynousinputdataflowdescriptorsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Group cGroup_8_0 = (Group)cAlternatives_8.eContents().get(0);
		private final Group cGroup_8_0_0 = (Group)cGroup_8_0.eContents().get(0);
		private final Assignment cOutputdataflowdescriptorsAssignment_8_0_0_0 = (Assignment)cGroup_8_0_0.eContents().get(0);
		private final CrossReference cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0 = (CrossReference)cOutputdataflowdescriptorsAssignment_8_0_0_0.eContents().get(0);
		private final RuleCall cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_0_0_0_1 = (RuleCall)cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_8_0_0_1 = (Keyword)cGroup_8_0_0.eContents().get(1);
		private final Assignment cOutputdataflowdescriptorsAssignment_8_0_1 = (Assignment)cGroup_8_0.eContents().get(1);
		private final CrossReference cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0 = (CrossReference)cOutputdataflowdescriptorsAssignment_8_0_1.eContents().get(0);
		private final RuleCall cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_1_0_1 = (RuleCall)cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0.eContents().get(1);
		private final Assignment cOutputdataflowdescriptorsAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final CrossReference cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0 = (CrossReference)cOutputdataflowdescriptorsAssignment_8_1.eContents().get(0);
		private final RuleCall cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_1_0_1 = (RuleCall)cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0.eContents().get(1);
		private final Assignment cAnomynousoutputdataflowdescriptorsAssignment_8_2 = (Assignment)cAlternatives_8.eContents().get(2);
		private final RuleCall cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_8_2_0 = (RuleCall)cAnomynousoutputdataflowdescriptorsAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cAnomynousoutputdataflowdescriptorsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_9_1_0 = (RuleCall)cAnomynousoutputdataflowdescriptorsAssignment_9_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cParametersAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cParametersDomainParameterBlockParserRuleCall_11_0 = (RuleCall)cParametersAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//PreProcessorBlock returns PreProcessorDescriptor:
		//    ('@description''('description=STRING')')?
		//    'preprocessor' name=ID
		//    '('
		//        (
		//            ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		//            | inputdataflowdescriptors+=[DataFlowDescriptor]
		//            | anomynousinputdataflowdescriptors+=AnomynousHolder
		//        )
		//        (','anomynousinputdataflowdescriptors+=AnomynousHolder)*
		//    ')'':'
		//         (
		//             ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		//             | outputdataflowdescriptors+=[DataFlowDescriptor]
		//             | anomynousoutputdataflowdescriptors+=AnomynousHolder
		//         )
		//         ( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
		//    '{'( parameters += DomainParameterBlock )+
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('@description''('description=STRING')')?
		//'preprocessor' name=ID
		//'('
		//    (
		//        ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		//        | inputdataflowdescriptors+=[DataFlowDescriptor]
		//        | anomynousinputdataflowdescriptors+=AnomynousHolder
		//    )
		//    (','anomynousinputdataflowdescriptors+=AnomynousHolder)*
		//')'':'
		//     (
		//         ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		//         | outputdataflowdescriptors+=[DataFlowDescriptor]
		//         | anomynousoutputdataflowdescriptors+=AnomynousHolder
		//     )
		//     ( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
		//'{'( parameters += DomainParameterBlock )+
		//'}'
		public Group getGroup() { return cGroup; }
		
		//('@description''('description=STRING')')?
		public Group getGroup_0() { return cGroup_0; }
		
		//'@description'
		public Keyword getDescriptionKeyword_0_0() { return cDescriptionKeyword_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_2() { return cDescriptionAssignment_0_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_2_0() { return cDescriptionSTRINGTerminalRuleCall_0_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//'preprocessor'
		public Keyword getPreprocessorKeyword_1() { return cPreprocessorKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//(
		//    ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		//    | inputdataflowdescriptors+=[DataFlowDescriptor]
		//    | anomynousinputdataflowdescriptors+=AnomynousHolder
		//)
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+
		public Group getGroup_4_0_0() { return cGroup_4_0_0; }
		
		//inputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getInputdataflowdescriptorsAssignment_4_0_0_0() { return cInputdataflowdescriptorsAssignment_4_0_0_0; }
		
		//[DataFlowDescriptor]
		public CrossReference getInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0() { return cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0; }
		
		//ID
		public RuleCall getInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_0_0_0_1() { return cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_0_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_4_0_0_1() { return cCommaKeyword_4_0_0_1; }
		
		//inputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getInputdataflowdescriptorsAssignment_4_0_1() { return cInputdataflowdescriptorsAssignment_4_0_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0() { return cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0; }
		
		//ID
		public RuleCall getInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_1_0_1() { return cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_1_0_1; }
		
		//inputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getInputdataflowdescriptorsAssignment_4_1() { return cInputdataflowdescriptorsAssignment_4_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0() { return cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0; }
		
		//ID
		public RuleCall getInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_1_0_1() { return cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_1_0_1; }
		
		//anomynousinputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousinputdataflowdescriptorsAssignment_4_2() { return cAnomynousinputdataflowdescriptorsAssignment_4_2; }
		
		//AnomynousHolder
		public RuleCall getAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_4_2_0() { return cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_4_2_0; }
		
		//(','anomynousinputdataflowdescriptors+=AnomynousHolder)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//anomynousinputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousinputdataflowdescriptorsAssignment_5_1() { return cAnomynousinputdataflowdescriptorsAssignment_5_1; }
		
		//AnomynousHolder
		public RuleCall getAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_5_1_0() { return cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//(
		//    ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		//    | outputdataflowdescriptors+=[DataFlowDescriptor]
		//    | anomynousoutputdataflowdescriptors+=AnomynousHolder
		//)
		public Alternatives getAlternatives_8() { return cAlternatives_8; }
		
		//( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		public Group getGroup_8_0() { return cGroup_8_0; }
		
		//( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+
		public Group getGroup_8_0_0() { return cGroup_8_0_0; }
		
		//outputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getOutputdataflowdescriptorsAssignment_8_0_0_0() { return cOutputdataflowdescriptorsAssignment_8_0_0_0; }
		
		//[DataFlowDescriptor]
		public CrossReference getOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0() { return cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0; }
		
		//ID
		public RuleCall getOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_0_0_0_1() { return cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_0_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_8_0_0_1() { return cCommaKeyword_8_0_0_1; }
		
		//outputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getOutputdataflowdescriptorsAssignment_8_0_1() { return cOutputdataflowdescriptorsAssignment_8_0_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0() { return cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0; }
		
		//ID
		public RuleCall getOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_1_0_1() { return cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_1_0_1; }
		
		//outputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getOutputdataflowdescriptorsAssignment_8_1() { return cOutputdataflowdescriptorsAssignment_8_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0() { return cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0; }
		
		//ID
		public RuleCall getOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_1_0_1() { return cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_1_0_1; }
		
		//anomynousoutputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousoutputdataflowdescriptorsAssignment_8_2() { return cAnomynousoutputdataflowdescriptorsAssignment_8_2; }
		
		//AnomynousHolder
		public RuleCall getAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_8_2_0() { return cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_8_2_0; }
		
		//( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
		public Group getGroup_9() { return cGroup_9; }
		
		//','
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//anomynousoutputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousoutputdataflowdescriptorsAssignment_9_1() { return cAnomynousoutputdataflowdescriptorsAssignment_9_1; }
		
		//AnomynousHolder
		public RuleCall getAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_9_1_0() { return cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_9_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//( parameters += DomainParameterBlock )+
		public Assignment getParametersAssignment_11() { return cParametersAssignment_11; }
		
		//DomainParameterBlock
		public RuleCall getParametersDomainParameterBlockParserRuleCall_11_0() { return cParametersDomainParameterBlockParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class DataProcessorBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.DataProcessorBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cDescriptionAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cProcessorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_0_0 = (Group)cGroup_4_0.eContents().get(0);
		private final Assignment cInputdataflowdescriptorsAssignment_4_0_0_0 = (Assignment)cGroup_4_0_0.eContents().get(0);
		private final CrossReference cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0 = (CrossReference)cInputdataflowdescriptorsAssignment_4_0_0_0.eContents().get(0);
		private final RuleCall cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_0_0_0_1 = (RuleCall)cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_4_0_0_1 = (Keyword)cGroup_4_0_0.eContents().get(1);
		private final Assignment cInputdataflowdescriptorsAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final CrossReference cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0 = (CrossReference)cInputdataflowdescriptorsAssignment_4_0_1.eContents().get(0);
		private final RuleCall cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_1_0_1 = (RuleCall)cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0.eContents().get(1);
		private final Assignment cInputdataflowdescriptorsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final CrossReference cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0 = (CrossReference)cInputdataflowdescriptorsAssignment_4_1.eContents().get(0);
		private final RuleCall cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_1_0_1 = (RuleCall)cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0.eContents().get(1);
		private final Assignment cAnomynousinputdataflowdescriptorsAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_4_2_0 = (RuleCall)cAnomynousinputdataflowdescriptorsAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAnomynousinputdataflowdescriptorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_5_1_0 = (RuleCall)cAnomynousinputdataflowdescriptorsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Group cGroup_8_0 = (Group)cAlternatives_8.eContents().get(0);
		private final Group cGroup_8_0_0 = (Group)cGroup_8_0.eContents().get(0);
		private final Assignment cOutputdataflowdescriptorsAssignment_8_0_0_0 = (Assignment)cGroup_8_0_0.eContents().get(0);
		private final CrossReference cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0 = (CrossReference)cOutputdataflowdescriptorsAssignment_8_0_0_0.eContents().get(0);
		private final RuleCall cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_0_0_0_1 = (RuleCall)cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_8_0_0_1 = (Keyword)cGroup_8_0_0.eContents().get(1);
		private final Assignment cOutputdataflowdescriptorsAssignment_8_0_1 = (Assignment)cGroup_8_0.eContents().get(1);
		private final CrossReference cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0 = (CrossReference)cOutputdataflowdescriptorsAssignment_8_0_1.eContents().get(0);
		private final RuleCall cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_1_0_1 = (RuleCall)cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0.eContents().get(1);
		private final Assignment cOutputdataflowdescriptorsAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final CrossReference cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0 = (CrossReference)cOutputdataflowdescriptorsAssignment_8_1.eContents().get(0);
		private final RuleCall cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_1_0_1 = (RuleCall)cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0.eContents().get(1);
		private final Assignment cAnomynousoutputdataflowdescriptorsAssignment_8_2 = (Assignment)cAlternatives_8.eContents().get(2);
		private final RuleCall cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_8_2_0 = (RuleCall)cAnomynousoutputdataflowdescriptorsAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cAnomynousoutputdataflowdescriptorsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_9_1_0 = (RuleCall)cAnomynousoutputdataflowdescriptorsAssignment_9_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cParametersAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cParametersDomainParameterBlockParserRuleCall_11_0 = (RuleCall)cParametersAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//DataProcessorBlock returns DataProcessorDescriptor:
		//    ('@description''('description=STRING')')?
		//    'processor' name=ID
		//    '('
		//        (
		//            ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		//            | inputdataflowdescriptors+=[DataFlowDescriptor]
		//            | anomynousinputdataflowdescriptors+=AnomynousHolder
		//        )
		//        (','anomynousinputdataflowdescriptors+=AnomynousHolder)*
		//    ')'':'
		//         (
		//             ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		//             | outputdataflowdescriptors+=[DataFlowDescriptor]
		//             | anomynousoutputdataflowdescriptors+=AnomynousHolder
		//         )
		//         ( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
		//     '{'( parameters += DomainParameterBlock )+
		//     '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('@description''('description=STRING')')?
		//'processor' name=ID
		//'('
		//    (
		//        ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		//        | inputdataflowdescriptors+=[DataFlowDescriptor]
		//        | anomynousinputdataflowdescriptors+=AnomynousHolder
		//    )
		//    (','anomynousinputdataflowdescriptors+=AnomynousHolder)*
		//')'':'
		//     (
		//         ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		//         | outputdataflowdescriptors+=[DataFlowDescriptor]
		//         | anomynousoutputdataflowdescriptors+=AnomynousHolder
		//     )
		//     ( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
		// '{'( parameters += DomainParameterBlock )+
		// '}'
		public Group getGroup() { return cGroup; }
		
		//('@description''('description=STRING')')?
		public Group getGroup_0() { return cGroup_0; }
		
		//'@description'
		public Keyword getDescriptionKeyword_0_0() { return cDescriptionKeyword_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_2() { return cDescriptionAssignment_0_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_2_0() { return cDescriptionSTRINGTerminalRuleCall_0_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//'processor'
		public Keyword getProcessorKeyword_1() { return cProcessorKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//(
		//    ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		//    | inputdataflowdescriptors+=[DataFlowDescriptor]
		//    | anomynousinputdataflowdescriptors+=AnomynousHolder
		//)
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+
		public Group getGroup_4_0_0() { return cGroup_4_0_0; }
		
		//inputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getInputdataflowdescriptorsAssignment_4_0_0_0() { return cInputdataflowdescriptorsAssignment_4_0_0_0; }
		
		//[DataFlowDescriptor]
		public CrossReference getInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0() { return cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0; }
		
		//ID
		public RuleCall getInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_0_0_0_1() { return cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_0_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_4_0_0_1() { return cCommaKeyword_4_0_0_1; }
		
		//inputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getInputdataflowdescriptorsAssignment_4_0_1() { return cInputdataflowdescriptorsAssignment_4_0_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0() { return cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0; }
		
		//ID
		public RuleCall getInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_1_0_1() { return cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_1_0_1; }
		
		//inputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getInputdataflowdescriptorsAssignment_4_1() { return cInputdataflowdescriptorsAssignment_4_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0() { return cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0; }
		
		//ID
		public RuleCall getInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_1_0_1() { return cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_1_0_1; }
		
		//anomynousinputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousinputdataflowdescriptorsAssignment_4_2() { return cAnomynousinputdataflowdescriptorsAssignment_4_2; }
		
		//AnomynousHolder
		public RuleCall getAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_4_2_0() { return cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_4_2_0; }
		
		//(','anomynousinputdataflowdescriptors+=AnomynousHolder)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//anomynousinputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousinputdataflowdescriptorsAssignment_5_1() { return cAnomynousinputdataflowdescriptorsAssignment_5_1; }
		
		//AnomynousHolder
		public RuleCall getAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_5_1_0() { return cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//(
		//    ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		//    | outputdataflowdescriptors+=[DataFlowDescriptor]
		//    | anomynousoutputdataflowdescriptors+=AnomynousHolder
		//)
		public Alternatives getAlternatives_8() { return cAlternatives_8; }
		
		//( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		public Group getGroup_8_0() { return cGroup_8_0; }
		
		//( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+
		public Group getGroup_8_0_0() { return cGroup_8_0_0; }
		
		//outputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getOutputdataflowdescriptorsAssignment_8_0_0_0() { return cOutputdataflowdescriptorsAssignment_8_0_0_0; }
		
		//[DataFlowDescriptor]
		public CrossReference getOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0() { return cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0; }
		
		//ID
		public RuleCall getOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_0_0_0_1() { return cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_0_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_8_0_0_1() { return cCommaKeyword_8_0_0_1; }
		
		//outputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getOutputdataflowdescriptorsAssignment_8_0_1() { return cOutputdataflowdescriptorsAssignment_8_0_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0() { return cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0; }
		
		//ID
		public RuleCall getOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_1_0_1() { return cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_1_0_1; }
		
		//outputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getOutputdataflowdescriptorsAssignment_8_1() { return cOutputdataflowdescriptorsAssignment_8_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0() { return cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0; }
		
		//ID
		public RuleCall getOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_1_0_1() { return cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_1_0_1; }
		
		//anomynousoutputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousoutputdataflowdescriptorsAssignment_8_2() { return cAnomynousoutputdataflowdescriptorsAssignment_8_2; }
		
		//AnomynousHolder
		public RuleCall getAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_8_2_0() { return cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_8_2_0; }
		
		//( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
		public Group getGroup_9() { return cGroup_9; }
		
		//','
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//anomynousoutputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousoutputdataflowdescriptorsAssignment_9_1() { return cAnomynousoutputdataflowdescriptorsAssignment_9_1; }
		
		//AnomynousHolder
		public RuleCall getAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_9_1_0() { return cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_9_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//( parameters += DomainParameterBlock )+
		public Assignment getParametersAssignment_11() { return cParametersAssignment_11; }
		
		//DomainParameterBlock
		public RuleCall getParametersDomainParameterBlockParserRuleCall_11_0() { return cParametersDomainParameterBlockParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class SynchronizerBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.SynchronizerBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cDescriptionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cDescriptionAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cSynchronizerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_0_0 = (Group)cGroup_4_0.eContents().get(0);
		private final Assignment cInputdataflowdescriptorsAssignment_4_0_0_0 = (Assignment)cGroup_4_0_0.eContents().get(0);
		private final CrossReference cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0 = (CrossReference)cInputdataflowdescriptorsAssignment_4_0_0_0.eContents().get(0);
		private final RuleCall cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_0_0_0_1 = (RuleCall)cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_4_0_0_1 = (Keyword)cGroup_4_0_0.eContents().get(1);
		private final Assignment cInputdataflowdescriptorsAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final CrossReference cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0 = (CrossReference)cInputdataflowdescriptorsAssignment_4_0_1.eContents().get(0);
		private final RuleCall cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_1_0_1 = (RuleCall)cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0.eContents().get(1);
		private final Assignment cInputdataflowdescriptorsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final CrossReference cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0 = (CrossReference)cInputdataflowdescriptorsAssignment_4_1.eContents().get(0);
		private final RuleCall cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_1_0_1 = (RuleCall)cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0.eContents().get(1);
		private final Assignment cAnomynousinputdataflowdescriptorsAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_4_2_0 = (RuleCall)cAnomynousinputdataflowdescriptorsAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAnomynousinputdataflowdescriptorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_5_1_0 = (RuleCall)cAnomynousinputdataflowdescriptorsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Group cGroup_8_0 = (Group)cAlternatives_8.eContents().get(0);
		private final Group cGroup_8_0_0 = (Group)cGroup_8_0.eContents().get(0);
		private final Assignment cOutputdataflowdescriptorsAssignment_8_0_0_0 = (Assignment)cGroup_8_0_0.eContents().get(0);
		private final CrossReference cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0 = (CrossReference)cOutputdataflowdescriptorsAssignment_8_0_0_0.eContents().get(0);
		private final RuleCall cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_0_0_0_1 = (RuleCall)cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_8_0_0_1 = (Keyword)cGroup_8_0_0.eContents().get(1);
		private final Assignment cOutputdataflowdescriptorsAssignment_8_0_1 = (Assignment)cGroup_8_0.eContents().get(1);
		private final CrossReference cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0 = (CrossReference)cOutputdataflowdescriptorsAssignment_8_0_1.eContents().get(0);
		private final RuleCall cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_1_0_1 = (RuleCall)cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0.eContents().get(1);
		private final Assignment cOutputdataflowdescriptorsAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final CrossReference cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0 = (CrossReference)cOutputdataflowdescriptorsAssignment_8_1.eContents().get(0);
		private final RuleCall cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_1_0_1 = (RuleCall)cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0.eContents().get(1);
		private final Assignment cAnomynousoutputdataflowdescriptorsAssignment_8_2 = (Assignment)cAlternatives_8.eContents().get(2);
		private final RuleCall cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_8_2_0 = (RuleCall)cAnomynousoutputdataflowdescriptorsAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cAnomynousoutputdataflowdescriptorsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_9_1_0 = (RuleCall)cAnomynousoutputdataflowdescriptorsAssignment_9_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cParametersAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cParametersDomainParameterBlockParserRuleCall_11_0 = (RuleCall)cParametersAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//SynchronizerBlock returns SynchronizerDescriptor:
		//    ('@description''('description=STRING')')?
		//    'synchronizer' name=ID
		//    '('
		//        (
		//            ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		//            | inputdataflowdescriptors+=[DataFlowDescriptor]
		//            | anomynousinputdataflowdescriptors+=AnomynousHolder
		//        )
		//        (','anomynousinputdataflowdescriptors+=AnomynousHolder)*
		//    ')'':'
		//         (
		//             ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		//             | outputdataflowdescriptors+=[DataFlowDescriptor]
		//             | anomynousoutputdataflowdescriptors+=AnomynousHolder
		//         )
		//         ( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
		//     '{'( parameters += DomainParameterBlock )+
		//      '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('@description''('description=STRING')')?
		//'synchronizer' name=ID
		//'('
		//    (
		//        ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		//        | inputdataflowdescriptors+=[DataFlowDescriptor]
		//        | anomynousinputdataflowdescriptors+=AnomynousHolder
		//    )
		//    (','anomynousinputdataflowdescriptors+=AnomynousHolder)*
		//')'':'
		//     (
		//         ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		//         | outputdataflowdescriptors+=[DataFlowDescriptor]
		//         | anomynousoutputdataflowdescriptors+=AnomynousHolder
		//     )
		//     ( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
		// '{'( parameters += DomainParameterBlock )+
		//  '}'
		public Group getGroup() { return cGroup; }
		
		//('@description''('description=STRING')')?
		public Group getGroup_0() { return cGroup_0; }
		
		//'@description'
		public Keyword getDescriptionKeyword_0_0() { return cDescriptionKeyword_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_0_2() { return cDescriptionAssignment_0_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_2_0() { return cDescriptionSTRINGTerminalRuleCall_0_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//'synchronizer'
		public Keyword getSynchronizerKeyword_1() { return cSynchronizerKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//(
		//    ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		//    | inputdataflowdescriptors+=[DataFlowDescriptor]
		//    | anomynousinputdataflowdescriptors+=AnomynousHolder
		//)
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+
		public Group getGroup_4_0_0() { return cGroup_4_0_0; }
		
		//inputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getInputdataflowdescriptorsAssignment_4_0_0_0() { return cInputdataflowdescriptorsAssignment_4_0_0_0; }
		
		//[DataFlowDescriptor]
		public CrossReference getInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0() { return cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_0_0_0; }
		
		//ID
		public RuleCall getInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_0_0_0_1() { return cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_0_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_4_0_0_1() { return cCommaKeyword_4_0_0_1; }
		
		//inputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getInputdataflowdescriptorsAssignment_4_0_1() { return cInputdataflowdescriptorsAssignment_4_0_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0() { return cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_0_1_0; }
		
		//ID
		public RuleCall getInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_1_0_1() { return cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_0_1_0_1; }
		
		//inputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getInputdataflowdescriptorsAssignment_4_1() { return cInputdataflowdescriptorsAssignment_4_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0() { return cInputdataflowdescriptorsDataFlowDescriptorCrossReference_4_1_0; }
		
		//ID
		public RuleCall getInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_1_0_1() { return cInputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_4_1_0_1; }
		
		//anomynousinputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousinputdataflowdescriptorsAssignment_4_2() { return cAnomynousinputdataflowdescriptorsAssignment_4_2; }
		
		//AnomynousHolder
		public RuleCall getAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_4_2_0() { return cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_4_2_0; }
		
		//(','anomynousinputdataflowdescriptors+=AnomynousHolder)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//anomynousinputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousinputdataflowdescriptorsAssignment_5_1() { return cAnomynousinputdataflowdescriptorsAssignment_5_1; }
		
		//AnomynousHolder
		public RuleCall getAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_5_1_0() { return cAnomynousinputdataflowdescriptorsAnomynousHolderParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//(
		//    ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		//    | outputdataflowdescriptors+=[DataFlowDescriptor]
		//    | anomynousoutputdataflowdescriptors+=AnomynousHolder
		//)
		public Alternatives getAlternatives_8() { return cAlternatives_8; }
		
		//( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
		public Group getGroup_8_0() { return cGroup_8_0; }
		
		//( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+
		public Group getGroup_8_0_0() { return cGroup_8_0_0; }
		
		//outputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getOutputdataflowdescriptorsAssignment_8_0_0_0() { return cOutputdataflowdescriptorsAssignment_8_0_0_0; }
		
		//[DataFlowDescriptor]
		public CrossReference getOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0() { return cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_0_0_0; }
		
		//ID
		public RuleCall getOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_0_0_0_1() { return cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_0_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_8_0_0_1() { return cCommaKeyword_8_0_0_1; }
		
		//outputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getOutputdataflowdescriptorsAssignment_8_0_1() { return cOutputdataflowdescriptorsAssignment_8_0_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0() { return cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_0_1_0; }
		
		//ID
		public RuleCall getOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_1_0_1() { return cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_0_1_0_1; }
		
		//outputdataflowdescriptors+=[DataFlowDescriptor]
		public Assignment getOutputdataflowdescriptorsAssignment_8_1() { return cOutputdataflowdescriptorsAssignment_8_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0() { return cOutputdataflowdescriptorsDataFlowDescriptorCrossReference_8_1_0; }
		
		//ID
		public RuleCall getOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_1_0_1() { return cOutputdataflowdescriptorsDataFlowDescriptorIDTerminalRuleCall_8_1_0_1; }
		
		//anomynousoutputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousoutputdataflowdescriptorsAssignment_8_2() { return cAnomynousoutputdataflowdescriptorsAssignment_8_2; }
		
		//AnomynousHolder
		public RuleCall getAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_8_2_0() { return cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_8_2_0; }
		
		//( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
		public Group getGroup_9() { return cGroup_9; }
		
		//','
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//anomynousoutputdataflowdescriptors+=AnomynousHolder
		public Assignment getAnomynousoutputdataflowdescriptorsAssignment_9_1() { return cAnomynousoutputdataflowdescriptorsAssignment_9_1; }
		
		//AnomynousHolder
		public RuleCall getAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_9_1_0() { return cAnomynousoutputdataflowdescriptorsAnomynousHolderParserRuleCall_9_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//( parameters += DomainParameterBlock )+
		public Assignment getParametersAssignment_11() { return cParametersAssignment_11; }
		
		//DomainParameterBlock
		public RuleCall getParametersDomainParameterBlockParserRuleCall_11_0() { return cParametersDomainParameterBlockParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class DefinitionInstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.DefinitionInstruction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDataflowdescriptorAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cDataflowdescriptorDataFlowDescriptorCrossReference_2_1_0 = (CrossReference)cDataflowdescriptorAssignment_2_1.eContents().get(0);
		private final RuleCall cDataflowdescriptorDataFlowDescriptorIDTerminalRuleCall_2_1_0_1 = (RuleCall)cDataflowdescriptorDataFlowDescriptorCrossReference_2_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DefinitionInstruction returns DataFlow:
		//    'let' name=ID ('a' dataflowdescriptor=[DataFlowDescriptor])? ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'let' name=ID ('a' dataflowdescriptor=[DataFlowDescriptor])? ';'
		public Group getGroup() { return cGroup; }
		
		//'let'
		public Keyword getLetKeyword_0() { return cLetKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('a' dataflowdescriptor=[DataFlowDescriptor])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'a'
		public Keyword getAKeyword_2_0() { return cAKeyword_2_0; }
		
		//dataflowdescriptor=[DataFlowDescriptor]
		public Assignment getDataflowdescriptorAssignment_2_1() { return cDataflowdescriptorAssignment_2_1; }
		
		//[DataFlowDescriptor]
		public CrossReference getDataflowdescriptorDataFlowDescriptorCrossReference_2_1_0() { return cDataflowdescriptorDataFlowDescriptorCrossReference_2_1_0; }
		
		//ID
		public RuleCall getDataflowdescriptorDataFlowDescriptorIDTerminalRuleCall_2_1_0_1() { return cDataflowdescriptorDataFlowDescriptorIDTerminalRuleCall_2_1_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class PreProcessorAssignationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.PreProcessorAssignation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOutputsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cOutputsDataFlowCrossReference_0_0_0 = (CrossReference)cOutputsAssignment_0_0.eContents().get(0);
		private final RuleCall cOutputsDataFlowIDTerminalRuleCall_0_0_0_1 = (RuleCall)cOutputsDataFlowCrossReference_0_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOutputsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cOutputsDataFlowCrossReference_1_0 = (CrossReference)cOutputsAssignment_1.eContents().get(0);
		private final RuleCall cOutputsDataFlowIDTerminalRuleCall_1_0_1 = (RuleCall)cOutputsDataFlowCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPreKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cInputsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final CrossReference cInputsDataFlowCrossReference_4_0_0 = (CrossReference)cInputsAssignment_4_0.eContents().get(0);
		private final RuleCall cInputsDataFlowIDTerminalRuleCall_4_0_0_1 = (RuleCall)cInputsDataFlowCrossReference_4_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInputsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cInputsDataFlowCrossReference_5_0 = (CrossReference)cInputsAssignment_5.eContents().get(0);
		private final RuleCall cInputsDataFlowIDTerminalRuleCall_5_0_1 = (RuleCall)cInputsDataFlowCrossReference_5_0.eContents().get(1);
		private final Keyword cUsingKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cInterfacerdescriptorAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cInterfacerdescriptorPreProcessorDescriptorCrossReference_7_0 = (CrossReference)cInterfacerdescriptorAssignment_7.eContents().get(0);
		private final RuleCall cInterfacerdescriptorPreProcessorDescriptorIDTerminalRuleCall_7_0_1 = (RuleCall)cInterfacerdescriptorPreProcessorDescriptorCrossReference_7_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//PreProcessorAssignation returns PreProcessor:
		//    (outputs+=[DataFlow] ',')* outputs+=[DataFlow]  '=' 'pre'((inputs+=[DataFlow] ) ',')* (inputs+=[DataFlow]) 'using' interfacerdescriptor=[PreProcessorDescriptor] ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(outputs+=[DataFlow] ',')* outputs+=[DataFlow]  '=' 'pre'((inputs+=[DataFlow] ) ',')* (inputs+=[DataFlow]) 'using' interfacerdescriptor=[PreProcessorDescriptor] ';'
		public Group getGroup() { return cGroup; }
		
		//(outputs+=[DataFlow] ',')*
		public Group getGroup_0() { return cGroup_0; }
		
		//outputs+=[DataFlow]
		public Assignment getOutputsAssignment_0_0() { return cOutputsAssignment_0_0; }
		
		//[DataFlow]
		public CrossReference getOutputsDataFlowCrossReference_0_0_0() { return cOutputsDataFlowCrossReference_0_0_0; }
		
		//ID
		public RuleCall getOutputsDataFlowIDTerminalRuleCall_0_0_0_1() { return cOutputsDataFlowIDTerminalRuleCall_0_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_0_1() { return cCommaKeyword_0_1; }
		
		//outputs+=[DataFlow]
		public Assignment getOutputsAssignment_1() { return cOutputsAssignment_1; }
		
		//[DataFlow]
		public CrossReference getOutputsDataFlowCrossReference_1_0() { return cOutputsDataFlowCrossReference_1_0; }
		
		//ID
		public RuleCall getOutputsDataFlowIDTerminalRuleCall_1_0_1() { return cOutputsDataFlowIDTerminalRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//'pre'
		public Keyword getPreKeyword_3() { return cPreKeyword_3; }
		
		//((inputs+=[DataFlow] ) ',')*
		public Group getGroup_4() { return cGroup_4; }
		
		//(inputs+=[DataFlow] )
		public Assignment getInputsAssignment_4_0() { return cInputsAssignment_4_0; }
		
		//[DataFlow]
		public CrossReference getInputsDataFlowCrossReference_4_0_0() { return cInputsDataFlowCrossReference_4_0_0; }
		
		//ID
		public RuleCall getInputsDataFlowIDTerminalRuleCall_4_0_0_1() { return cInputsDataFlowIDTerminalRuleCall_4_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_4_1() { return cCommaKeyword_4_1; }
		
		//(inputs+=[DataFlow])
		public Assignment getInputsAssignment_5() { return cInputsAssignment_5; }
		
		//[DataFlow]
		public CrossReference getInputsDataFlowCrossReference_5_0() { return cInputsDataFlowCrossReference_5_0; }
		
		//ID
		public RuleCall getInputsDataFlowIDTerminalRuleCall_5_0_1() { return cInputsDataFlowIDTerminalRuleCall_5_0_1; }
		
		//'using'
		public Keyword getUsingKeyword_6() { return cUsingKeyword_6; }
		
		//interfacerdescriptor=[PreProcessorDescriptor]
		public Assignment getInterfacerdescriptorAssignment_7() { return cInterfacerdescriptorAssignment_7; }
		
		//[PreProcessorDescriptor]
		public CrossReference getInterfacerdescriptorPreProcessorDescriptorCrossReference_7_0() { return cInterfacerdescriptorPreProcessorDescriptorCrossReference_7_0; }
		
		//ID
		public RuleCall getInterfacerdescriptorPreProcessorDescriptorIDTerminalRuleCall_7_0_1() { return cInterfacerdescriptorPreProcessorDescriptorIDTerminalRuleCall_7_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class ProcessorAssignationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.ProcessorAssignation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOutputsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cOutputsDataFlowCrossReference_0_0_0 = (CrossReference)cOutputsAssignment_0_0.eContents().get(0);
		private final RuleCall cOutputsDataFlowIDTerminalRuleCall_0_0_0_1 = (RuleCall)cOutputsDataFlowCrossReference_0_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOutputsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cOutputsDataFlowCrossReference_1_0 = (CrossReference)cOutputsAssignment_1.eContents().get(0);
		private final RuleCall cOutputsDataFlowIDTerminalRuleCall_1_0_1 = (RuleCall)cOutputsDataFlowCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cProcessKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cInputsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final CrossReference cInputsDataFlowCrossReference_4_0_0 = (CrossReference)cInputsAssignment_4_0.eContents().get(0);
		private final RuleCall cInputsDataFlowIDTerminalRuleCall_4_0_0_1 = (RuleCall)cInputsDataFlowCrossReference_4_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInputsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cInputsDataFlowCrossReference_5_0 = (CrossReference)cInputsAssignment_5.eContents().get(0);
		private final RuleCall cInputsDataFlowIDTerminalRuleCall_5_0_1 = (RuleCall)cInputsDataFlowCrossReference_5_0.eContents().get(1);
		private final Keyword cUsingKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cInterfacerdescriptorAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cInterfacerdescriptorDataProcessorDescriptorCrossReference_7_0 = (CrossReference)cInterfacerdescriptorAssignment_7.eContents().get(0);
		private final RuleCall cInterfacerdescriptorDataProcessorDescriptorIDTerminalRuleCall_7_0_1 = (RuleCall)cInterfacerdescriptorDataProcessorDescriptorCrossReference_7_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ProcessorAssignation returns DataProcessor:
		//    (outputs+=[DataFlow] ',')* outputs+=[DataFlow] '=' 'process' ((inputs+=[DataFlow] ) ',')* (inputs+=[DataFlow]) 'using' interfacerdescriptor=[DataProcessorDescriptor] ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(outputs+=[DataFlow] ',')* outputs+=[DataFlow] '=' 'process' ((inputs+=[DataFlow] ) ',')* (inputs+=[DataFlow]) 'using' interfacerdescriptor=[DataProcessorDescriptor] ';'
		public Group getGroup() { return cGroup; }
		
		//(outputs+=[DataFlow] ',')*
		public Group getGroup_0() { return cGroup_0; }
		
		//outputs+=[DataFlow]
		public Assignment getOutputsAssignment_0_0() { return cOutputsAssignment_0_0; }
		
		//[DataFlow]
		public CrossReference getOutputsDataFlowCrossReference_0_0_0() { return cOutputsDataFlowCrossReference_0_0_0; }
		
		//ID
		public RuleCall getOutputsDataFlowIDTerminalRuleCall_0_0_0_1() { return cOutputsDataFlowIDTerminalRuleCall_0_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_0_1() { return cCommaKeyword_0_1; }
		
		//outputs+=[DataFlow]
		public Assignment getOutputsAssignment_1() { return cOutputsAssignment_1; }
		
		//[DataFlow]
		public CrossReference getOutputsDataFlowCrossReference_1_0() { return cOutputsDataFlowCrossReference_1_0; }
		
		//ID
		public RuleCall getOutputsDataFlowIDTerminalRuleCall_1_0_1() { return cOutputsDataFlowIDTerminalRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//'process'
		public Keyword getProcessKeyword_3() { return cProcessKeyword_3; }
		
		//((inputs+=[DataFlow] ) ',')*
		public Group getGroup_4() { return cGroup_4; }
		
		//(inputs+=[DataFlow] )
		public Assignment getInputsAssignment_4_0() { return cInputsAssignment_4_0; }
		
		//[DataFlow]
		public CrossReference getInputsDataFlowCrossReference_4_0_0() { return cInputsDataFlowCrossReference_4_0_0; }
		
		//ID
		public RuleCall getInputsDataFlowIDTerminalRuleCall_4_0_0_1() { return cInputsDataFlowIDTerminalRuleCall_4_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_4_1() { return cCommaKeyword_4_1; }
		
		//(inputs+=[DataFlow])
		public Assignment getInputsAssignment_5() { return cInputsAssignment_5; }
		
		//[DataFlow]
		public CrossReference getInputsDataFlowCrossReference_5_0() { return cInputsDataFlowCrossReference_5_0; }
		
		//ID
		public RuleCall getInputsDataFlowIDTerminalRuleCall_5_0_1() { return cInputsDataFlowIDTerminalRuleCall_5_0_1; }
		
		//'using'
		public Keyword getUsingKeyword_6() { return cUsingKeyword_6; }
		
		//interfacerdescriptor=[DataProcessorDescriptor]
		public Assignment getInterfacerdescriptorAssignment_7() { return cInterfacerdescriptorAssignment_7; }
		
		//[DataProcessorDescriptor]
		public CrossReference getInterfacerdescriptorDataProcessorDescriptorCrossReference_7_0() { return cInterfacerdescriptorDataProcessorDescriptorCrossReference_7_0; }
		
		//ID
		public RuleCall getInterfacerdescriptorDataProcessorDescriptorIDTerminalRuleCall_7_0_1() { return cInterfacerdescriptorDataProcessorDescriptorIDTerminalRuleCall_7_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class SynchronizerAssignationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.SynchronizerAssignation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOutputsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cOutputsDataFlowCrossReference_0_0_0 = (CrossReference)cOutputsAssignment_0_0.eContents().get(0);
		private final RuleCall cOutputsDataFlowIDTerminalRuleCall_0_0_0_1 = (RuleCall)cOutputsDataFlowCrossReference_0_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOutputsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cOutputsDataFlowCrossReference_1_0 = (CrossReference)cOutputsAssignment_1.eContents().get(0);
		private final RuleCall cOutputsDataFlowIDTerminalRuleCall_1_0_1 = (RuleCall)cOutputsDataFlowCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSynchronizeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cInputsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final CrossReference cInputsDataFlowCrossReference_4_0_0 = (CrossReference)cInputsAssignment_4_0.eContents().get(0);
		private final RuleCall cInputsDataFlowIDTerminalRuleCall_4_0_0_1 = (RuleCall)cInputsDataFlowCrossReference_4_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInputsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cInputsDataFlowCrossReference_5_0 = (CrossReference)cInputsAssignment_5.eContents().get(0);
		private final RuleCall cInputsDataFlowIDTerminalRuleCall_5_0_1 = (RuleCall)cInputsDataFlowCrossReference_5_0.eContents().get(1);
		private final Keyword cUsingKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cInterfacerdescriptorAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cInterfacerdescriptorSynchronizerDescriptorCrossReference_7_0 = (CrossReference)cInterfacerdescriptorAssignment_7.eContents().get(0);
		private final RuleCall cInterfacerdescriptorSynchronizerDescriptorIDTerminalRuleCall_7_0_1 = (RuleCall)cInterfacerdescriptorSynchronizerDescriptorCrossReference_7_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//SynchronizerAssignation returns Synchronizer:
		//    (outputs+=[DataFlow] ',')* outputs+=[DataFlow] '='  'synchronize' ((inputs+=[DataFlow]) ',')* (inputs+=[DataFlow]) 'using' interfacerdescriptor=[SynchronizerDescriptor] ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(outputs+=[DataFlow] ',')* outputs+=[DataFlow] '='  'synchronize' ((inputs+=[DataFlow]) ',')* (inputs+=[DataFlow]) 'using' interfacerdescriptor=[SynchronizerDescriptor] ';'
		public Group getGroup() { return cGroup; }
		
		//(outputs+=[DataFlow] ',')*
		public Group getGroup_0() { return cGroup_0; }
		
		//outputs+=[DataFlow]
		public Assignment getOutputsAssignment_0_0() { return cOutputsAssignment_0_0; }
		
		//[DataFlow]
		public CrossReference getOutputsDataFlowCrossReference_0_0_0() { return cOutputsDataFlowCrossReference_0_0_0; }
		
		//ID
		public RuleCall getOutputsDataFlowIDTerminalRuleCall_0_0_0_1() { return cOutputsDataFlowIDTerminalRuleCall_0_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_0_1() { return cCommaKeyword_0_1; }
		
		//outputs+=[DataFlow]
		public Assignment getOutputsAssignment_1() { return cOutputsAssignment_1; }
		
		//[DataFlow]
		public CrossReference getOutputsDataFlowCrossReference_1_0() { return cOutputsDataFlowCrossReference_1_0; }
		
		//ID
		public RuleCall getOutputsDataFlowIDTerminalRuleCall_1_0_1() { return cOutputsDataFlowIDTerminalRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//'synchronize'
		public Keyword getSynchronizeKeyword_3() { return cSynchronizeKeyword_3; }
		
		//((inputs+=[DataFlow]) ',')*
		public Group getGroup_4() { return cGroup_4; }
		
		//(inputs+=[DataFlow])
		public Assignment getInputsAssignment_4_0() { return cInputsAssignment_4_0; }
		
		//[DataFlow]
		public CrossReference getInputsDataFlowCrossReference_4_0_0() { return cInputsDataFlowCrossReference_4_0_0; }
		
		//ID
		public RuleCall getInputsDataFlowIDTerminalRuleCall_4_0_0_1() { return cInputsDataFlowIDTerminalRuleCall_4_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_4_1() { return cCommaKeyword_4_1; }
		
		//(inputs+=[DataFlow])
		public Assignment getInputsAssignment_5() { return cInputsAssignment_5; }
		
		//[DataFlow]
		public CrossReference getInputsDataFlowCrossReference_5_0() { return cInputsDataFlowCrossReference_5_0; }
		
		//ID
		public RuleCall getInputsDataFlowIDTerminalRuleCall_5_0_1() { return cInputsDataFlowIDTerminalRuleCall_5_0_1; }
		
		//'using'
		public Keyword getUsingKeyword_6() { return cUsingKeyword_6; }
		
		//interfacerdescriptor=[SynchronizerDescriptor]
		public Assignment getInterfacerdescriptorAssignment_7() { return cInterfacerdescriptorAssignment_7; }
		
		//[SynchronizerDescriptor]
		public CrossReference getInterfacerdescriptorSynchronizerDescriptorCrossReference_7_0() { return cInterfacerdescriptorSynchronizerDescriptorCrossReference_7_0; }
		
		//ID
		public RuleCall getInterfacerdescriptorSynchronizerDescriptorIDTerminalRuleCall_7_0_1() { return cInterfacerdescriptorSynchronizerDescriptorIDTerminalRuleCall_7_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class OutputAssignationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.OutputAssignation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOutputsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cOutputsDataFlowCrossReference_0_0_0 = (CrossReference)cOutputsAssignment_0_0.eContents().get(0);
		private final RuleCall cOutputsDataFlowIDTerminalRuleCall_0_0_0_1 = (RuleCall)cOutputsDataFlowCrossReference_0_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOutputsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cOutputsDataFlowCrossReference_1_0 = (CrossReference)cOutputsAssignment_1.eContents().get(0);
		private final RuleCall cOutputsDataFlowIDTerminalRuleCall_1_0_1 = (RuleCall)cOutputsDataFlowCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cInputsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final CrossReference cInputsDataFlowCrossReference_3_0_0 = (CrossReference)cInputsAssignment_3_0.eContents().get(0);
		private final RuleCall cInputsDataFlowIDTerminalRuleCall_3_0_0_1 = (RuleCall)cInputsDataFlowCrossReference_3_0_0.eContents().get(1);
		private final Keyword cCommaKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cInputsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cInputsDataFlowCrossReference_4_0 = (CrossReference)cInputsAssignment_4.eContents().get(0);
		private final RuleCall cInputsDataFlowIDTerminalRuleCall_4_0_1 = (RuleCall)cInputsDataFlowCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OutputAssignation returns Interfacer:
		//    (outputs+=[DataFlow] ',')*(outputs+=[DataFlow]) '=' ((inputs+=[DataFlow]) ',')* (inputs+=[DataFlow]) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(outputs+=[DataFlow] ',')*(outputs+=[DataFlow]) '=' ((inputs+=[DataFlow]) ',')* (inputs+=[DataFlow]) ';'
		public Group getGroup() { return cGroup; }
		
		//(outputs+=[DataFlow] ',')*
		public Group getGroup_0() { return cGroup_0; }
		
		//outputs+=[DataFlow]
		public Assignment getOutputsAssignment_0_0() { return cOutputsAssignment_0_0; }
		
		//[DataFlow]
		public CrossReference getOutputsDataFlowCrossReference_0_0_0() { return cOutputsDataFlowCrossReference_0_0_0; }
		
		//ID
		public RuleCall getOutputsDataFlowIDTerminalRuleCall_0_0_0_1() { return cOutputsDataFlowIDTerminalRuleCall_0_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_0_1() { return cCommaKeyword_0_1; }
		
		//(outputs+=[DataFlow])
		public Assignment getOutputsAssignment_1() { return cOutputsAssignment_1; }
		
		//[DataFlow]
		public CrossReference getOutputsDataFlowCrossReference_1_0() { return cOutputsDataFlowCrossReference_1_0; }
		
		//ID
		public RuleCall getOutputsDataFlowIDTerminalRuleCall_1_0_1() { return cOutputsDataFlowIDTerminalRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//((inputs+=[DataFlow]) ',')*
		public Group getGroup_3() { return cGroup_3; }
		
		//(inputs+=[DataFlow])
		public Assignment getInputsAssignment_3_0() { return cInputsAssignment_3_0; }
		
		//[DataFlow]
		public CrossReference getInputsDataFlowCrossReference_3_0_0() { return cInputsDataFlowCrossReference_3_0_0; }
		
		//ID
		public RuleCall getInputsDataFlowIDTerminalRuleCall_3_0_0_1() { return cInputsDataFlowIDTerminalRuleCall_3_0_0_1; }
		
		//','
		public Keyword getCommaKeyword_3_1() { return cCommaKeyword_3_1; }
		
		//(inputs+=[DataFlow])
		public Assignment getInputsAssignment_4() { return cInputsAssignment_4; }
		
		//[DataFlow]
		public CrossReference getInputsDataFlowCrossReference_4_0() { return cInputsDataFlowCrossReference_4_0; }
		
		//ID
		public RuleCall getInputsDataFlowIDTerminalRuleCall_4_0_1() { return cInputsDataFlowIDTerminalRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class DomainParameterBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.DomainParameterBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDomainKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParametersParameterExpressionParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//DomainParameterBlock returns DomainParameter:
		//    '@domain''('name=ID')' ('{'
		//        ( parameters += ParameterExpression )+
		//    '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'@domain''('name=ID')' ('{'
		//    ( parameters += ParameterExpression )+
		//'}')?
		public Group getGroup() { return cGroup; }
		
		//'@domain'
		public Keyword getDomainKeyword_0() { return cDomainKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//('{'
		//       ( parameters += ParameterExpression )+
		//   '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }
		
		//( parameters += ParameterExpression )+
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }
		
		//ParameterExpression
		public RuleCall getParametersParameterExpressionParserRuleCall_4_1_0() { return cParametersParameterExpressionParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }
	}
	
	public class TypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cByteEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cByteByteKeyword_1_0 = (Keyword)cByteEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cShortEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cShortShortKeyword_2_0 = (Keyword)cShortEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cIntEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cIntIntKeyword_3_0 = (Keyword)cIntEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLongEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLongLongKeyword_4_0 = (Keyword)cLongEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cFloatFloatKeyword_5_0 = (Keyword)cFloatEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cDoubleDoubleKeyword_6_0 = (Keyword)cDoubleEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cCharEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cCharCharKeyword_7_0 = (Keyword)cCharEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cBooleanBooleanKeyword_8_0 = (Keyword)cBooleanEnumLiteralDeclaration_8.eContents().get(0);
		
		//enum Type :
		//    string='string'| byte = 'byte'| short = 'short'| int = 'int'| long = 'long'| float = 'float' | double = 'double' | char = 'char' | boolean = 'boolean'
		//;
		public EnumRule getRule() { return rule; }
		
		//string='string'| byte = 'byte'| short = 'short'| int = 'int'| long = 'long'| float = 'float' | double = 'double' | char = 'char' | boolean = 'boolean'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//string='string'
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }
		
		//'string'
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }
		
		//byte = 'byte'
		public EnumLiteralDeclaration getByteEnumLiteralDeclaration_1() { return cByteEnumLiteralDeclaration_1; }
		
		//'byte'
		public Keyword getByteByteKeyword_1_0() { return cByteByteKeyword_1_0; }
		
		//short = 'short'
		public EnumLiteralDeclaration getShortEnumLiteralDeclaration_2() { return cShortEnumLiteralDeclaration_2; }
		
		//'short'
		public Keyword getShortShortKeyword_2_0() { return cShortShortKeyword_2_0; }
		
		//int = 'int'
		public EnumLiteralDeclaration getIntEnumLiteralDeclaration_3() { return cIntEnumLiteralDeclaration_3; }
		
		//'int'
		public Keyword getIntIntKeyword_3_0() { return cIntIntKeyword_3_0; }
		
		//long = 'long'
		public EnumLiteralDeclaration getLongEnumLiteralDeclaration_4() { return cLongEnumLiteralDeclaration_4; }
		
		//'long'
		public Keyword getLongLongKeyword_4_0() { return cLongLongKeyword_4_0; }
		
		//float = 'float'
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_5() { return cFloatEnumLiteralDeclaration_5; }
		
		//'float'
		public Keyword getFloatFloatKeyword_5_0() { return cFloatFloatKeyword_5_0; }
		
		//double = 'double'
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_6() { return cDoubleEnumLiteralDeclaration_6; }
		
		//'double'
		public Keyword getDoubleDoubleKeyword_6_0() { return cDoubleDoubleKeyword_6_0; }
		
		//char = 'char'
		public EnumLiteralDeclaration getCharEnumLiteralDeclaration_7() { return cCharEnumLiteralDeclaration_7; }
		
		//'char'
		public Keyword getCharCharKeyword_7_0() { return cCharCharKeyword_7_0; }
		
		//boolean = 'boolean'
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_8() { return cBooleanEnumLiteralDeclaration_8; }
		
		//'boolean'
		public Keyword getBooleanBooleanKeyword_8_0() { return cBooleanBooleanKeyword_8_0; }
	}
	
	private final IotFrameworkElements pIotFramework;
	private final ThingBlockElements pThingBlock;
	private final ConnexionBlockElements pConnexionBlock;
	private final ParameterExpressionElements pParameterExpression;
	private final StreamDefinitionElements pStreamDefinition;
	private final OutputBlockElements pOutputBlock;
	private final HolderBlockElements pHolderBlock;
	private final AnonymousStreamDefinitionElements pAnonymousStreamDefinition;
	private final AnomynousHolderElements pAnomynousHolder;
	private final ReferenceNameElements pReferenceName;
	private final PreProcessorBlockElements pPreProcessorBlock;
	private final DataProcessorBlockElements pDataProcessorBlock;
	private final SynchronizerBlockElements pSynchronizerBlock;
	private final DefinitionInstructionElements pDefinitionInstruction;
	private final PreProcessorAssignationElements pPreProcessorAssignation;
	private final ProcessorAssignationElements pProcessorAssignation;
	private final SynchronizerAssignationElements pSynchronizerAssignation;
	private final OutputAssignationElements pOutputAssignation;
	private final DomainParameterBlockElements pDomainParameterBlock;
	private final TypeElements eType;
	private final TerminalRule tBOOLEAN;
	private final TerminalRule tNINT;
	private final TerminalRule tLONG;
	private final TerminalRule tFLOAT;
	private final TerminalRule tDOUBLE;
	private final TerminalRule tCHAR;
	private final TerminalRule tBYTE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public IDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pIotFramework = new IotFrameworkElements();
		this.pThingBlock = new ThingBlockElements();
		this.pConnexionBlock = new ConnexionBlockElements();
		this.pParameterExpression = new ParameterExpressionElements();
		this.pStreamDefinition = new StreamDefinitionElements();
		this.pOutputBlock = new OutputBlockElements();
		this.pHolderBlock = new HolderBlockElements();
		this.pAnonymousStreamDefinition = new AnonymousStreamDefinitionElements();
		this.pAnomynousHolder = new AnomynousHolderElements();
		this.pReferenceName = new ReferenceNameElements();
		this.pPreProcessorBlock = new PreProcessorBlockElements();
		this.pDataProcessorBlock = new DataProcessorBlockElements();
		this.pSynchronizerBlock = new SynchronizerBlockElements();
		this.pDefinitionInstruction = new DefinitionInstructionElements();
		this.pPreProcessorAssignation = new PreProcessorAssignationElements();
		this.pProcessorAssignation = new ProcessorAssignationElements();
		this.pSynchronizerAssignation = new SynchronizerAssignationElements();
		this.pOutputAssignation = new OutputAssignationElements();
		this.pDomainParameterBlock = new DomainParameterBlockElements();
		this.eType = new TypeElements();
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.BOOLEAN");
		this.tNINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.NINT");
		this.tLONG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.LONG");
		this.tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.FLOAT");
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.DOUBLE");
		this.tCHAR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.CHAR");
		this.tBYTE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "n7.intern.v3.xtext.idsl.IDsl.BYTE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("n7.intern.v3.xtext.idsl.IDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//IotFramework:
	//    (      dataflowdescriptors   += ThingBlock
	//        | dataflowdescriptors   += OutputBlock
	//        | dataflowdescriptors   += HolderBlock
	//        | interfacerdescriptors += SynchronizerBlock
	//        | interfacerdescriptors += PreProcessorBlock
	//        | interfacerdescriptors += DataProcessorBlock
	//    )*
	//    ('@description''('description=STRING')')?
	//     'configuration' name=ID '{'
	//    (dataflows+=DefinitionInstruction
	//        | interfacers += SynchronizerAssignation
	//        | interfacers += PreProcessorAssignation
	//        | interfacers += ProcessorAssignation
	//        | interfacers += OutputAssignation
	//    )+ '}'
	//;
	public IotFrameworkElements getIotFrameworkAccess() {
		return pIotFramework;
	}
	
	public ParserRule getIotFrameworkRule() {
		return getIotFrameworkAccess().getRule();
	}
	
	//ThingBlock returns Thing:
	//        ('@description''('description=STRING')')?
	//        'thing' name=ID '{' (connexions += ConnexionBlock | parameters += DomainParameterBlock | streamdescriptors += StreamDefinition )+ '}';
	public ThingBlockElements getThingBlockAccess() {
		return pThingBlock;
	}
	
	public ParserRule getThingBlockRule() {
		return getThingBlockAccess().getRule();
	}
	
	//ConnexionBlock returns Connexion :
	//    ('@description''('description=STRING')')?
	//    'connexion' name=ID '{' ( parameters += DomainParameterBlock )+ '}'
	//;
	public ConnexionBlockElements getConnexionBlockAccess() {
		return pConnexionBlock;
	}
	
	public ParserRule getConnexionBlockRule() {
		return getConnexionBlockAccess().getRule();
	}
	
	//ParameterExpression returns Parameter:
	//    name=ID '=' (content=STRING|content= INT |content= NINT | content = BOOLEAN | content = FLOAT | content = CHAR | content = LONG | content = BYTE | content = DOUBLE) ';'
	//;
	public ParameterExpressionElements getParameterExpressionAccess() {
		return pParameterExpression;
	}
	
	public ParserRule getParameterExpressionRule() {
		return getParameterExpressionAccess().getRule();
	}
	
	//StreamDefinition returns StreamDescriptor:
	//    ('@description''('description=STRING')')?
	//    'stream' name=ID 'of' type=Type '<' samplingRate=INT '>'';'
	//;
	public StreamDefinitionElements getStreamDefinitionAccess() {
		return pStreamDefinition;
	}
	
	public ParserRule getStreamDefinitionRule() {
		return getStreamDefinitionAccess().getRule();
	}
	
	//OutputBlock returns Output:
	//    ('@description''('description=STRING')')?
	//    'output' name=ID '{'( parameters += DomainParameterBlock )+'}'
	//;
	public OutputBlockElements getOutputBlockAccess() {
		return pOutputBlock;
	}
	
	public ParserRule getOutputBlockRule() {
		return getOutputBlockAccess().getRule();
	}
	
	//HolderBlock returns DataHolder:
	//    ('@description''('description=STRING')')?
	//    'holder' name=ID '{'( parameters += DomainParameterBlock | streamdescriptors += StreamDefinition)+'}'
	//;
	public HolderBlockElements getHolderBlockAccess() {
		return pHolderBlock;
	}
	
	public ParserRule getHolderBlockRule() {
		return getHolderBlockAccess().getRule();
	}
	
	//AnonymousStreamDefinition returns StreamDescriptor:
	//    'stream' name=ID 'of' type=Type
	//;
	public AnonymousStreamDefinitionElements getAnonymousStreamDefinitionAccess() {
		return pAnonymousStreamDefinition;
	}
	
	public ParserRule getAnonymousStreamDefinitionRule() {
		return getAnonymousStreamDefinitionAccess().getRule();
	}
	
	//AnomynousHolder returns DataHolder:
	//    '['  (streamdescriptors += AnonymousStreamDefinition ',')* (streamdescriptors += AnonymousStreamDefinition) ']'
	//;
	public AnomynousHolderElements getAnomynousHolderAccess() {
		return pAnomynousHolder;
	}
	
	public ParserRule getAnomynousHolderRule() {
		return getAnomynousHolderAccess().getRule();
	}
	
	//ReferenceName returns Reference :
	//    name=ID
	//;
	public ReferenceNameElements getReferenceNameAccess() {
		return pReferenceName;
	}
	
	public ParserRule getReferenceNameRule() {
		return getReferenceNameAccess().getRule();
	}
	
	//PreProcessorBlock returns PreProcessorDescriptor:
	//    ('@description''('description=STRING')')?
	//    'preprocessor' name=ID
	//    '('
	//        (
	//            ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
	//            | inputdataflowdescriptors+=[DataFlowDescriptor]
	//            | anomynousinputdataflowdescriptors+=AnomynousHolder
	//        )
	//        (','anomynousinputdataflowdescriptors+=AnomynousHolder)*
	//    ')'':'
	//         (
	//             ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
	//             | outputdataflowdescriptors+=[DataFlowDescriptor]
	//             | anomynousoutputdataflowdescriptors+=AnomynousHolder
	//         )
	//         ( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
	//    '{'( parameters += DomainParameterBlock )+
	//    '}'
	//;
	public PreProcessorBlockElements getPreProcessorBlockAccess() {
		return pPreProcessorBlock;
	}
	
	public ParserRule getPreProcessorBlockRule() {
		return getPreProcessorBlockAccess().getRule();
	}
	
	//DataProcessorBlock returns DataProcessorDescriptor:
	//    ('@description''('description=STRING')')?
	//    'processor' name=ID
	//    '('
	//        (
	//            ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
	//            | inputdataflowdescriptors+=[DataFlowDescriptor]
	//            | anomynousinputdataflowdescriptors+=AnomynousHolder
	//        )
	//        (','anomynousinputdataflowdescriptors+=AnomynousHolder)*
	//    ')'':'
	//         (
	//             ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
	//             | outputdataflowdescriptors+=[DataFlowDescriptor]
	//             | anomynousoutputdataflowdescriptors+=AnomynousHolder
	//         )
	//         ( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
	//     '{'( parameters += DomainParameterBlock )+
	//     '}'
	//;
	public DataProcessorBlockElements getDataProcessorBlockAccess() {
		return pDataProcessorBlock;
	}
	
	public ParserRule getDataProcessorBlockRule() {
		return getDataProcessorBlockAccess().getRule();
	}
	
	//SynchronizerBlock returns SynchronizerDescriptor:
	//    ('@description''('description=STRING')')?
	//    'synchronizer' name=ID
	//    '('
	//        (
	//            ( inputdataflowdescriptors+=[DataFlowDescriptor] ',')+inputdataflowdescriptors+=[DataFlowDescriptor]
	//            | inputdataflowdescriptors+=[DataFlowDescriptor]
	//            | anomynousinputdataflowdescriptors+=AnomynousHolder
	//        )
	//        (','anomynousinputdataflowdescriptors+=AnomynousHolder)*
	//    ')'':'
	//         (
	//             ( outputdataflowdescriptors+=[DataFlowDescriptor] ',')+outputdataflowdescriptors+=[DataFlowDescriptor]
	//             | outputdataflowdescriptors+=[DataFlowDescriptor]
	//             | anomynousoutputdataflowdescriptors+=AnomynousHolder
	//         )
	//         ( ',' anomynousoutputdataflowdescriptors+=AnomynousHolder)*
	//     '{'( parameters += DomainParameterBlock )+
	//      '}'
	//;
	public SynchronizerBlockElements getSynchronizerBlockAccess() {
		return pSynchronizerBlock;
	}
	
	public ParserRule getSynchronizerBlockRule() {
		return getSynchronizerBlockAccess().getRule();
	}
	
	//DefinitionInstruction returns DataFlow:
	//    'let' name=ID ('a' dataflowdescriptor=[DataFlowDescriptor])? ';'
	//;
	public DefinitionInstructionElements getDefinitionInstructionAccess() {
		return pDefinitionInstruction;
	}
	
	public ParserRule getDefinitionInstructionRule() {
		return getDefinitionInstructionAccess().getRule();
	}
	
	//PreProcessorAssignation returns PreProcessor:
	//    (outputs+=[DataFlow] ',')* outputs+=[DataFlow]  '=' 'pre'((inputs+=[DataFlow] ) ',')* (inputs+=[DataFlow]) 'using' interfacerdescriptor=[PreProcessorDescriptor] ';'
	//;
	public PreProcessorAssignationElements getPreProcessorAssignationAccess() {
		return pPreProcessorAssignation;
	}
	
	public ParserRule getPreProcessorAssignationRule() {
		return getPreProcessorAssignationAccess().getRule();
	}
	
	//ProcessorAssignation returns DataProcessor:
	//    (outputs+=[DataFlow] ',')* outputs+=[DataFlow] '=' 'process' ((inputs+=[DataFlow] ) ',')* (inputs+=[DataFlow]) 'using' interfacerdescriptor=[DataProcessorDescriptor] ';'
	//;
	public ProcessorAssignationElements getProcessorAssignationAccess() {
		return pProcessorAssignation;
	}
	
	public ParserRule getProcessorAssignationRule() {
		return getProcessorAssignationAccess().getRule();
	}
	
	//SynchronizerAssignation returns Synchronizer:
	//    (outputs+=[DataFlow] ',')* outputs+=[DataFlow] '='  'synchronize' ((inputs+=[DataFlow]) ',')* (inputs+=[DataFlow]) 'using' interfacerdescriptor=[SynchronizerDescriptor] ';'
	//;
	public SynchronizerAssignationElements getSynchronizerAssignationAccess() {
		return pSynchronizerAssignation;
	}
	
	public ParserRule getSynchronizerAssignationRule() {
		return getSynchronizerAssignationAccess().getRule();
	}
	
	//OutputAssignation returns Interfacer:
	//    (outputs+=[DataFlow] ',')*(outputs+=[DataFlow]) '=' ((inputs+=[DataFlow]) ',')* (inputs+=[DataFlow]) ';'
	//;
	public OutputAssignationElements getOutputAssignationAccess() {
		return pOutputAssignation;
	}
	
	public ParserRule getOutputAssignationRule() {
		return getOutputAssignationAccess().getRule();
	}
	
	//DomainParameterBlock returns DomainParameter:
	//    '@domain''('name=ID')' ('{'
	//        ( parameters += ParameterExpression )+
	//    '}')?
	//;
	public DomainParameterBlockElements getDomainParameterBlockAccess() {
		return pDomainParameterBlock;
	}
	
	public ParserRule getDomainParameterBlockRule() {
		return getDomainParameterBlockAccess().getRule();
	}
	
	//enum Type :
	//    string='string'| byte = 'byte'| short = 'short'| int = 'int'| long = 'long'| float = 'float' | double = 'double' | char = 'char' | boolean = 'boolean'
	//;
	public TypeElements getTypeAccess() {
		return eType;
	}
	
	public EnumRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//terminal BOOLEAN returns ecore::EBoolean :
	//    'true' | 'false'
	//;
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	}
	
	//terminal NINT returns ecore::EInt :
	//    '-' INT
	//;
	public TerminalRule getNINTRule() {
		return tNINT;
	}
	
	//terminal LONG returns ecore::EInt :
	//    (NINT|INT) ('l'|'L')
	//;
	public TerminalRule getLONGRule() {
		return tLONG;
	}
	
	//terminal FLOAT returns ecore::EFloat :
	//    (NINT|INT)('.'INT)?('f'|'F')
	//;
	public TerminalRule getFLOATRule() {
		return tFLOAT;
	}
	
	//terminal DOUBLE returns ecore::EDouble :
	//    (NINT|INT)('.'INT)?('d'|'D')
	//;
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	}
	
	//terminal CHAR returns ecore::EChar:
	//     "'" ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") ) "'"
	//;
	public TerminalRule getCHARRule() {
		return tCHAR;
	}
	
	//terminal BYTE returns ecore::EByte:
	//    '0x'((('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))
	//        |(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))
	//        |(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))
	//        |(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))(('a'..'z'|'A'..'Z'|'0'..'9')('a'..'z'|'A'..'Z'|'0'..'9'))
	//    )
	//;
	public TerminalRule getBYTERule() {
		return tBYTE;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
